1.选择器：
    1.元素选择器：$("元素名")
      ID选择器： $("#ID名")
      类选择器： $(".类名")
      群组选择器：  $("选择器1,选择器2,选择器3,...,选择器n")  //表示选中所有选择器的元素
    2.后代选择器： $("M N")    表示选中M中的N元素，后代选择器用空格隔开
      子代选择器： $("M>N")    选中M中的子代元素N，指直接子元素
      兄弟选择器： $("M~N")    选中M后面的所有的兄弟元素N。（一类元素，可以有很多）
      相邻选择器： $("M+N")    选中M后面的相邻的兄弟元素N（只有1个）
      属性选择器： E[attr]            选择带有attr属性的E元素
                  E[attr="value"]    选择attr属性取值为value的E元素
                  E[attr!="value"]   选择attr取值不是value的E元素
                  E[attr^="value"]   选择attr取值是以value开头的元素E
                  E[attr$="value"]   选择attr取值是以value结尾的元素E
                  E[attr*="value"]   选择attr取值是包含value的元素E
                  E[attr|="value"]   选择attr取值等于value或者是以value开头的元素E
                  E[attr~="value"]   选择attr取值等于value或包含value的元素E
    3.伪类选择器
      位置选择器： :first , :last ,  :odd ,  :even ,  第一个，最后一个，偶数，奇数
                  :eq(n) ,  :lt(n) ,  :gt(n)   第n个元素，小于n的元素，大于n的元素，n从0开始。
      子元素选择器： E:first-child,  last-child,  第一个子元素E，最后一个子元素E
                    E:nth-child(n) ,   n取值为数字，odd,even ,选中第n个元素或奇偶元素，n从1开始
                    E :only-child,      选择父元素下的唯一的子元素E，该父元素只有一个子元素E

                    E:first-of-type     选择父元素下的第一个E类型的元素
                    E:last-of-type      选择父元素下的最后一个E类型的元素
                    E:nth-of-type       选择父元素下的第n个E类型元素或奇偶元素
                    E:only-of-type      选择父元素下唯一的E类型的子元素，该父元素可以有多个子元素。

            二者区别：<div> <h1></h1> <p></p>  <span></span>  <span></span> </div>
            h1:first-child       选择h1  因为父元素下的第一个元素就是h1
            p:first-child        没有选中元素，因为父元素下的第一个元素是h1 不是p
            span:first-child     没有选中元素，因为父元素下的第一个元素是h1， 不是span 

            h1:first-of-type     选择h1  父元素下的h1类型的元素的第一个
            p:first-of-type      选择p   父元素下的p类型的元素的第一个
            span:first-of-type   选择第一个span  父元素下的span类型的元素的第一个
            
            故:first-child 选择父元素下的子元素时，需要区分元素位置，:first-of-type 不需要区分元素的位置，以此类推。（实际开发中，只会用到第一类子元素选择器）

            下标的区分：  在jQuery中，除了:nth-child(n), :nth-of-type(n)  的下标是从1开始的，其他的下标都是从0开始的，如eq(n),lt(n),gt(n)等。

      可见性伪类选择器： :visible   :hidden
      内容伪类选择器：   :contains(text),   :has(selector),   :empty,    :parent
      表单伪类选择器：   :input,   :button,   :submit,   :reset,   :text,   :textarea
                        :password,    :radio,    :checkbox,     :image,    :file
                    操作表单的一些选择器，即input的类型等
      表单属性伪类选择器：:checked,   :selected,   :enabled,    :disabled,    :read-only,    :focus
                    操作表单的一些属性
                    （checked属性只有radio，和checkbox类型的表单才有）
      其他伪类选择器： :not(selector)        选取除了某个选择器之外的所有元素
                      :animated            选取正在执行动画的元素
                      :root                选取页面根元素，html元素
                      :header              选取h1-h6的标题元素
                      :target              选取锚点元素
                      :lang(language)      选取特定语言的元素

2.DOM操作
    DOM：文档对象模型。
    1.创建元素
        在jQuery中，用字符串的形式创建一个元素节点，通过append(),before()等方法将字符串插入到现有的元素节点中。
        如：$li="<li>hhhhhg</li>"，即创建了一个li节点
    2.插入节点
        prepend()，prependTo()      向所选元素内部的“开始处”插入内容。
        $(A).prepend(B)             往A的内部的开始处插入B，$(A).prependTo(B)往B的内部的开始处插入A
        append(),  appendTo()       向所选元素的末尾处插入内容
        $(A).append(B)              往A的内部的末尾处插入B，$(A).appendTo(B)往B的内部的末尾处插入A
        before(),  insertBefore()   向所选元素的前面插入内容
        $(A).before(B)              往A的前面插入B，$(A).insertBefore(B)往B的前面插入A
        after(),   insertAfter()    向所选元素的后面插入内容
        $(A).after(B),              向A的后面插入B，$(A).insertAfter(B)向B的后面插入A。
    3.删除元素
        $().remove()     将某个元素及其内部的内容删除，并删除该元素绑定的事件，返回被删除的元素（可以实现元素互换，互换后被删除的元素的事件不能用了）
        $().detach()     将某个元素及其内部的内容删除，未删除该元素绑定的事件，返回被删除的元素（可以实现元素互换，互换后的元素绑定的事件还可以用）
        $().empty()      将某个元素的某个后代元素删除，并不会删除自身元素

        remove()与 detach()的区别：如果想要使用元素原来绑定的事件，使用detach()，如果不想再使用元素原来绑定的事件，就使用remove()
    4.复制元素
        $().clone(bool)  bool是布尔值，取值为true时，不仅复制元素，还复制元素绑定的事件，取值为false时，仅复制元素，不复制元素绑定的事件。

    5.替换事件
        $(A).replaceWith(B)  用B替换A
        $(A).replaceAll(B)   用A替换B
    6.包裹元素
        $(A).wrap(B)         用B将A包裹起来，指将匹配的元素单独包裹，即每一个A都用B包裹。
        $(A).wrapAll(B)      用B将A包裹起来，指将匹配的元素一起包裹，即所有的A由一个B包裹。
        $(A).wrapInner(B)    将A元素内部的所有元素和文本用B包裹起来，而不会包裹A元素本身。
    7.遍历元素
        $().each(function(index,element){    }) index是可选参数，表示当前元素的索引号，element是可选参数，表示当前元素，可以用$(this)来代替element,如果要退出each循环，在回调函数中返回false 即 return false;
    8.属性操作 
        $().attr("属性名")                                 获取元素某个属性的属性值
        $().attr("属性","取值")                            设置某一个元素的属性值
        $().attr({"属性1": "取值", "属性2": "取值", ...})   设置多个属性，对象，键值对
        $().removeAttr("属性名")                           删除元素的某个属性     
        $().prop()                                        用法和attr()方法类似，用于checked,selected,disabled等具有true和false两种取值的属性。

        prop()的出现是为了弥补attr的不足，对于attr()不能获取或操作的属性，可以用prop()来实现。
    
    9.样式操作
        $().css("属性名")                                  获取一个元素css属性的值
        $().css("属性","取值")                             设置一个css属性
        $().css({"属性1": "取值", "属性2": "取值", ...})    设置多个属性,使用的是对象方式，属性与值采用键值对的方式。

        $().addClass("类名")      为元素添加一个class,与设置多个css属性一样，但可读性更好。
        $().removeClass("类名")   删除一个class类
        $().toggleClass("类名")   切换一个class，如果该class存在，就删除，如果不存在，就添加。

        $().width(n),  $().height(n)            n可选，n不存在时获取宽，高，n存在时设置宽，高
        $().innerWidth(), $().innerHeight()     width/height + padding
        $().outerWidth(), $().outerHeight()     width/height + padding + border

        jQuery很多方法都有一个特点，没有参数表示获取，有参数表示设置。
        width(n)中的n不需要带单位，向50px是width(50)

        $().offset()          方法用来获取或设置元素相对于“当前文档（也就是浏览器窗口）”的偏移距离
        $().position()        用来获取或设置当前元素相对于“最近被定为的祖先元素”的偏移位置。

        $().offset().top      获取元素相对于当前文档“顶部”的距离
        $().offset().left     获取元素相对于当前文档“左部”的距离
        以上两个方法返回的数值是不带单位的。
        $().position().top    获取元素相对于最近被定为的祖先元素“顶部”的距离
        $().position().left   获取元素相对于最近被定位的祖先元素”左部“的距离
        以上两个方法返回的数值是不带单位的。

        滚动条的距离
        $().scrollTop()   获取或设置元素相对于滚动条“顶边”的距离
        $().scrollLeft()  获取或设置元素相对于滚动条“左边”的距离，实际开发中，经常用到scrollTop()方法，而不常用scrollLeft()方法。

        内容操作
        html()    用来获取或者设置一个元素中的“html内容”，所谓的HTML内容就是所有的内部元素以及文本。
        text()    用来获取或设置一个元素的“文本内容”
        val()     用来获取和设置表单元素的值。
        以上三个方法的特点：没有参数时是获取，有参数时是设置。


3.事件：
    1.页面事件：window.onload   vs     $(document).ready(function(){    }) ==> $(function(){})
    2.鼠标事件：
        click  mouseover  mouseout  mousedown  mouseup mousemove
        $(select).click(fn)
    3.键盘事件：
        keydown  keyup
        $(select).keydown(fn)
    4.表单事件：
        focus  blur  聚焦和失去焦点，用于表单元素（单选按钮，复选框，单行文本，多行文本，下拉列表），超链接
        select   选中单行文本或者多行文本时触发
        change   常用于“具有多个选项的表单元素”，触发方式有：单选框选择某一项时，多选框选择某一项时，下拉列表选择某一项时
        $(select).focus(fn)
    5.编辑事件：
        contextmenu  即编辑鼠标右键功能，return false 禁用鼠标右键
        $(select).contextmenu(fn)
    6.滚动事件：
        scroll
        s().scroll(fn)
    7.绑定事件：
        $().on(event, fn )  ==  addeventlisenter()
        $().off(event)  ==  removeeventlisenter()
    8.合成事件
        $().hover(fn1,fn2) fn1 表示指针移入触发的处理事件， fn2表示指针移出触发的处理事件，代替了mouseenter(),mouseleave()两个方法。
    9.一次事件
        $().one(fn)  只触发一次   相当于  $().on(event, fn(){
                //代码
                $(this).off(event)
            })
    10.自定义事件
        $().on(event, fn)      on()定义事件
        $().click(fn(){        trigger 触发事件 ,trigger不禁可以触发自定义事件，还可以触发任何          $().trigger(event)             iQuery事件             
        })
        $().on("click",fn).trigger("click")   trigger自动触发点击事件，不用鼠标点击
    11.event对象
        $().click(function(e){ ...  })   每次调用一个事件，jQuery会默认给事件传入一个隐藏的参数，这个隐藏的参数就是event对象，一般来说，event对象是作为事件函数的第一个参数传入的，所以e就是一个变量名，用来存储event对象。
        event.type    获取触发事件类型
        event.target   获取触发事件元素
        event.wihch    获取鼠标左，中，右键
        event.pageX,event.pageY   获取鼠标相对于页面左上角的坐标，以页面为参考点，不随滚动条移动而变化
        event.keyCode   返回一个数值，即按键的键码
        event.shiftKey  event.ctrlKey   event.altKey   返回一个布尔值（true or false) 判断按键是否是shift , ctrl, alt .
    12.this
        jQuery的this用于事件操作中，this始终指向触发当前事件的元素。$(this)
        $("div").click(fn(){  ...   $(this)  }) $(this) 相当于 $("div")

4.动画
    show()
    hide()
    toggle()
    fadeIn()
    fadeOut()
    fadeToggle()
    fadeTo(speed,opacity,fn)
    slideUp()
    slideDown()
    slideToggle()
    animate(params,speed,fn)
    stop()
    delay(speed)
    is(":animated")
5.过滤方法
    hasClass()
    eq()
    is()
    not()
    fliter(),has()

6.查找方法
    parent()
    parents()
    parentsUntil()
    children()
    find()
    contents()
    prev()
    prevAll()
    prevUntil()
    next()
    nextAll()
    nextUntil()
    siblings()
7.工具函数
    $.trim(str)      全局函数，，即jQuery对象直接调用，返回去除字符串首尾空格字符的字符串。

7.高级
    index()  获取元素在父元素中的索引值
    链式调用   链式调用用于同一个jQuery对象
    jQuery对象和DOM对象：  jQuery方法用于jQuery对象，DOM方法（原生JavaScript方法）用于DOM对象
          $()[n]   $().get()   jQuery对象转化为DOM对象
    解决库冲突  
    jQuery.noConflict()    释放"$"符号的控制器过渡给其他库，jQuery对象的声明用jQuery()

    jQuery CDN
        CDN 内容分发网络,即在离主机近的地方放置一台性能良好的，链接顺畅的副本服务器，让用户能够在最近的距离，以最快的速度获取内容。，设置副本服务器投入太大，所以可以使用第三方提供的CND路线。
        jQuery CDN常用路线：<script src="http://code.jquery.com/jquery-1.12.4.js"
                                integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv71Oy9C27hHQ+Xp8a4MxAQ="
                                crossorigin="anonymous">
                            </script>

                            <script src="https://cdn.bootcss.com/jQuery/1.12.4/jquery.min.js"></script>
            jQuery CDN 就是引入其它网站的jQuery库，这种方式可以大大提高页面的加载速度，也可以减少自己网站的流量浪费。


        

   
        

